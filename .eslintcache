[{"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/index.js":"1","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/App.js":"2","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/reportWebVitals.js":"3","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/MainComponent.js":"4","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/HeaderComponent.js":"5","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/HomeComponent.js":"6","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/FooterComponent.js":"7","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/ContactComponent.js":"8","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/MenuComponent.js":"9","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/AboutComponent.js":"10","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/shared/dessert.js":"11","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/shared/drinks.js":"12","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/shared/dinner.js":"13","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/OrderComponent.js":"14","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/CarouselComponent.js":"15","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/ReserveComponent.js":"16"},{"size":640,"mtime":1612634559697,"results":"17","hashOfConfig":"18"},{"size":410,"mtime":1612634672352,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611798171724,"results":"20","hashOfConfig":"18"},{"size":1511,"mtime":1641487397092,"results":"21","hashOfConfig":"18"},{"size":2906,"mtime":1659453627566,"results":"22","hashOfConfig":"18"},{"size":3786,"mtime":1645565182272,"results":"23","hashOfConfig":"18"},{"size":1909,"mtime":1663950177761,"results":"24","hashOfConfig":"18"},{"size":9280,"mtime":1659453567514,"results":"25","hashOfConfig":"18"},{"size":4021,"mtime":1663950523931,"results":"26","hashOfConfig":"18"},{"size":2225,"mtime":1645568256306,"results":"27","hashOfConfig":"18"},{"size":627,"mtime":1612817286560,"results":"28","hashOfConfig":"18"},{"size":1415,"mtime":1615518758287,"results":"29","hashOfConfig":"18"},{"size":1576,"mtime":1612814807872,"results":"30","hashOfConfig":"18"},{"size":1041,"mtime":1663950771327,"results":"31","hashOfConfig":"18"},{"size":2032,"mtime":1641487378496,"results":"32","hashOfConfig":"18"},{"size":5985,"mtime":1659453640465,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pve9yk",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/index.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/App.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/reportWebVitals.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/MainComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/HeaderComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/HomeComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/FooterComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/ContactComponent.js",["68","69","70","71","72"],"import React, { Component } from 'react';\nimport { Button, Label, Col, Row } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <br /> <br />\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            123 S Main Ave.<br />\n                            Sioux Falls, SD 57105<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-605-321-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> kokomobarandgrille@kokomo.co</a>\n                    </div>\n                </div>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                        <h2 id=\"cursive\">We would love to hear from you!</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name: </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                        />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">                                \n                            <Label htmlFor=\"lastName\" md={2}>Last Name: </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone Number: </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email Address: </Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Inquiries and Feedback: </Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"info\">\n                                        Send Message\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Contact;","/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/MenuComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/AboutComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/shared/dessert.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/shared/drinks.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/shared/dinner.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/OrderComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/CarouselComponent.js",[],"/Users/gregorynoethlich/Desktop/codeProjects/kokomosite/src/components/ReserveComponent.js",["73","74"],"import React, { Component } from 'react';\nimport { Card, CardHeader, CardBody, CardTitle, \n    Button, Label, Col } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\n\nclass Reserve extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            numPeople: '',\n            date: '',\n            time: '',\n            feedback: '',\n            touched: {\n                name: false,\n                numPeople: false,\n                date: false,\n                time: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n    }\n\n    render() {\n        return (\n        <Card>\n            <CardHeader className=\"bg-info text-white\">\n                <CardTitle id=\"reserve\">Reserve A Table</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                    <div className=\"form-group row\">\n                        <Label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Name: </Label>\n                        <Col sm={10}>\n                            <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                    className=\"form-control\"\n                                    placeholder=\"Enter Your Name...\"\n                                    validators={{\n                                        required,\n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }}\n                            />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".name\"\n                                show=\"touched\"\n                                Component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be at least 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                }}\n                            />\n                        </Col>\n                    </div>\n                    <div className=\"form-group row\">\n                        <Label htmlFor=\"numPeople\" className=\"col-sm-2 col-form-label\">Number of People:</Label>\n                        <Col sm={10}>\n                            <Control.text model=\".numPeople\" id=\"numPeople\" name=\"numPeople\"\n                                    className=\"form-control\"\n                                    placeholder=\"Number of People\"\n                                    validators={{\n                                        required,\n                                        isNumber\n                                    }}\n                                />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".numPeople\"\n                                show=\"touched\"\n                                Component=\"div\"\n                                messages={{\n                                    required: 'Required',\n                                    isNumber: 'Must be a number'\n                                }}\n                            />\n                        </Col>\n                    </div>\n                    <div className=\"form-group row\">\n                        <Label htmlFor=\"date\" className=\"col-sm-2 col-form-label\">Date:</Label>\n                        <Col sm={10}>\n                            <Control type=\"date\" model=\".date\" id=\"date\" name=\"date\" \n                                    className=\"form-control\"\n                                    placeholder=\"Number of People\"\n                                    validators={{\n                                        required\n                                    }}\n                                />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".date\"\n                                show=\"touched\"\n                                Component=\"div\"\n                                messages={{\n                                    required: 'Required'\n                                }}\n                            />\n                        </Col>\n                    </div>\n                    <div className=\"form-group row\">\n                        <Label htmlFor=\"time\" className=\"col-sm-2 col-form-label\">Time:</Label>\n                        <Col sm={10}>\n                            <Control type=\"time\" model=\".time\" id=\"time\" name=\"time\"\n                                    className=\"form-control\"\n                                    validators={{\n                                        required\n                                    }}\n                                />\n                            <Errors\n                                className=\"text-danger\"\n                                model=\".time\"\n                                show=\"touched\"\n                                Component=\"div\"\n                                messages={{\n                                    required: 'Required'\n                                }}\n                            />\n                        </Col>\n                    </div>\n                    <Button color=\"info\">Reserve A Table</Button>\n                </LocalForm>\n            </CardBody>\n        </Card>\n        );\n    }\n}\n\nexport default Reserve;",{"ruleId":"75","severity":1,"message":"76","line":61,"column":37,"nodeType":"77","messageId":"78","endLine":69,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":86,"column":37,"nodeType":"77","messageId":"78","endLine":94,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":111,"column":37,"nodeType":"77","messageId":"78","endLine":120,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":138,"column":37,"nodeType":"77","messageId":"78","endLine":145,"endColumn":39},{"ruleId":"75","severity":1,"message":"79","line":161,"column":37,"nodeType":"77","messageId":"78","endLine":164,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":49,"column":29,"nodeType":"77","messageId":"78","endLine":57,"endColumn":31},{"ruleId":"75","severity":1,"message":"76","line":74,"column":29,"nodeType":"77","messageId":"78","endLine":81,"endColumn":35},"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE"]